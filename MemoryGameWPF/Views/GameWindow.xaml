<Window x:Class="MemoryGameWPF.Views.GameWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MemoryGameWPF.Views"
        xmlns:viewModels="clr-namespace:MemoryGameWPF.ViewModels"
        xmlns:converters="clr-namespace:MemoryGameWPF.Converters"
        mc:Ignorable="d"
        Title="Memory Game" Height="600" Width="800"
        d:DataContext="{d:DesignInstance Type=viewModels:GameViewModel, IsDesignTimeCreatable=False}">

    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- For Menu -->
            <RowDefinition Height="*"/>
            <!-- For Game Board -->
            <RowDefinition Height="Auto"/>
            <!-- For Timer/Status -->
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Header="_Category">
                    <MenuItem Header="_Animals" Command="{Binding SelectCategoryCommand}" CommandParameter="Animals"/>
                    <MenuItem Header="_Nature" Command="{Binding SelectCategoryCommand}" CommandParameter="Nature"/>
                    <MenuItem Header="_Objects" Command="{Binding SelectCategoryCommand}" CommandParameter="Objects"/>
                </MenuItem>
                <MenuItem Header="_Options">
                    <MenuItem Header="_Standard (4x4)" Command="{Binding SetStandardOptionsCommand}"/>
                    <MenuItem Header="_Custom..." Command="{Binding SetCustomOptionsCommand}"/>
                    <MenuItem Header="_Open Game" Command="{Binding OpenGameCommand}"/>
                <MenuItem Header="_Save Game" Command="{Binding SaveGameCommand}"/>
                <MenuItem Header="_Statistics" Command="{Binding ShowStatisticsCommand}"/>
                <Separator />
                <MenuItem Header="_Exit" Command="{Binding ExitCommand}"/>
            </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Header="_About" Command="{Binding AboutCommand}"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_New Game" Command="{Binding NewGameCommand}"/>
        </Menu>

        <!-- Game Board Area -->
        <ItemsControl Grid.Row="1" ItemsSource="{Binding GameBoardCards}" Margin="10">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="{Binding Rows}" Columns="{Binding Columns}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type viewModels:CardViewModel}">
                    <Button Command="{Binding FlipCardCommand}"
                Height="80" Width="80" Margin="5" Padding="0"
                x:Name="CardButton">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="{Binding IsMatched, Converter={StaticResource InverseBooleanConverter}}"/>
                                <Setter Property="Opacity" Value="1.0"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMatched}" Value="True">
                                        <Setter Property="Opacity" Value="0.3"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <!-- Content of the Button -->
                        <Grid Background="Transparent">
                            <Border Background="CornflowerBlue" CornerRadius="5">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <!-- Default: Show Back -->
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsFlipped}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <!-- Hide Back when Flipped -->
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <!-- Card Image (Visible when flipped and not matched) -->
                            <Image Source="{Binding ImagePath}" Stretch="Uniform" x:Name="CardImage">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <!-- Default: Hide Image -->
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsFlipped}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <!-- Show Image when Flipped -->
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Grid>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock Text="{Binding BoardSizeDescription, StringFormat='Size: {0}'}" Margin="5,0"/>
            </StatusBarItem>
            <Separator/>
            <!-- Timer Display -->
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="{Binding TimeRemainingFormatted}" Margin="5,0" FontWeight="Bold"/>
            </StatusBarItem>
        </StatusBar>

    </Grid>
</Window>